{"data":{"site":{"siteMetadata":{"title":"Jeff Rafter"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"Furby is probably the most advanced, well designed, impossibly elegant child’s toy that exists. They might be the key to unlocking the the emotion of pair-programming. It might seem like the stuff of nightmares: these small talking robots dancing and singing and clamoring for your attention, but as a developer or user experience designer it is an almost perfect medium. The Original Furby The Furby was originally released in  _ _ _ _ . That Christmas it was the toy to have and inspired the movie Jingle All the Way with Arnold Schwarzeneggar and Sinbad. Not many toys can claim that. The original Furby was a marvel. The source code The furby organ The furby secret audio language Furby Connect Hasbro released the Furby Connect in 2012. Mad hordes of shoppers weren’t tackling one another in the aisles to purchase the last one. If only the shoppers had understood the power. The Furby Connect is a dancing, singing robotic toy much like its predecessor. Hacknight Furbies Hack-week","fields":{"slug":"/furbies/"},"frontmatter":{"date":"June 28, 2019","title":"More Than You Ever Wanted to Know About Furbies","excerpt":"Furby is probably the most advanced, well designed, impossibly elegant child's toy that exists. They might be the key to unlocking the the emotion of pair-programming."}}},{"node":{"excerpt":"For Father’s Day I got an Oculus Quest. It is entirely immersive and blast to play with my kids. Of course, I immediately wanted to make my own games and got started with Unity . There are a few blog posts and videos that helped me on my way. Getting started To develop for you Oculus you’ll not only need an Oculus account but you may want to setup an Oculus Organiztion (free). Additionally (for my purposes), you’ll need a Unity account. I’m using a personal account (also free). Mac versus Windows I’m using a MacBook Pro. Many of the tutorials and videos you’ll find assume you’re working on Windows. This can create some challenges but the biggest challenges are around the platform support for the Oculus Quest itself. Oculus doesn’t make a version of it’s Oculus Desktop app (or libraries) available on MacOS. Because of this you’ll want to start with tutorials that are specific to the Mac and adjust. Unity & initial setup I followed a couple of tutorials for getting Unity Hub and Unity installed. I recommend: How to get started with Oculus Quest and Unity on macOS How to get started with Oculus Quest development in Unity If you prefer videos: Learn Once I had the basics working and could load games I built in Unity on my Quest I wanted to do more. I found a set of really great tutorial videos by  Valem ,  Quentin Valembois  and was hooked. As I went through the videos I took notes and (with permission) am posting those here. While watching these videos, you might notice Valem is using the ▶ button to debug. This works because he is actually developing for the Rift in the videos (notice that the controllers are upside-down). In a later  video on recreating Slenderman  (at 1:47) he explains how to use the ▶ button while building for the Oculus Quest. Unfortunately that won’t work on MacOS because the Oculus plugin is not supported. There are notes on how to get this working at the end of this post. How to make a VR game in Unity - Part 1 - Setup, Hand presence, Grabbing object Setup the project Set Unknown Sources in the Oculus app (Windows only) In Unity Hub create a new 3D app Click Build Settings in the File menu Choose Android, click Switch Platform Change the Texture Compression to ASTC (not required , very slow) Open Player Settings: Set the Company and Product Name Remove Vulkan from the Graphics APIs list (Other Settings) Set the Package Name (Other Settings) Set the Minimum API Level to Android 4.4 ‘KitKat’ (Other Settings) Check VR Intergation (XR…","fields":{"slug":"/oculus-quest/"},"frontmatter":{"date":"June 28, 2019","title":"Developing for the Oculus Quest","excerpt":"Everyone wants to talk about consumer VR. I just want to make some games."}}},{"node":{"excerpt":"Creating a static website involves an almost infinite set of choices. Among these is\n Gatsby  – a static site framework based on  ,  ,   and\nmany other modern approaches. Gatsby is, in many ways, the JavaScript successor to\n Jekyll . I’ve upgraded several sites to Gatsby (including this one) finding\na way to integrate TypeScript as part of the journey. Before you read this it is important to point out: you should start with a template. In this post I\nam going to work through all of the steps and try to explain them along the way. Included\nin this post are some of the reasons behind why I’ve chosen one particular plugin or skipped\nanother. Often – especially when you choose a default Gatsby starter – it is difficult to understand\nhow all of the pieces fit together, or how you might build your own starter template. Hopefully\nthis post provides some helpful examples. Also: the Gatsby  documentation  is extremely good. There is a\nfantastic  tutorial ,  quick start  and some recipes. I’ve relied on those and a host of other blogs when working on this\npost. In order to follow this, you’ll need access to a terminal (or console) and you’ll need Node, Node Version Manager, and git installed. All of the code (and commits) are availble on GitHub:  https://github.com/example-gatsby-typescript-blog/example-gatsby-typescript-blog.github.io Getting started First you want to create a folder for your project: We’ll be using Gatsby which is a toolkit that is written in TypeScript and requires Node. If you have multiple local projects you might run into a conflict about which Node version should be used. Node Version Manager solves this problem. To control which version of Node should be used in your project, add an   file: The file is pretty simple; just the version. At the time you read this there may be a newer version of Node. You can check  https://nodejs.org . Ignore some things We plan to use   to keep track of our changes. As we work on our project locally, there will be a lot of files we won’t want to keep track of; we’ll want to ignore them. To do this we’ll create a new file called    . These files can be very short and specific, or they can be very long and general. We’ll use a more generic one that will work on different kinds of computers. If you are looking for an example   you can check out  https://github.com/github/gitignore . For now, just copy the following: Configure your editor This section is completely optional. This is here mostly so I can copy and…","fields":{"slug":"/gatsby-with-typescript/"},"frontmatter":{"date":"May 25, 2019","title":"Building a Static Gatsby-based Website with TypeScript","excerpt":"Creating a static website involves an almost infinite set of choices. I've upgraded several sites to Gatsby (including this one) finding a way to integrate TypeScript as part of the journey. Gatsby leverages React, JSX, CSS-in-JS, GraphQL and many other modern approaches to building sites."}}}]}},"pageContext":{}}