{"version":3,"sources":["webpack:///./src/util/time-ago-in-words.ts","webpack:///./src/components/comments.tsx","webpack:///./src/templates/post.tsx"],"names":["timeAgoInWords","date","start","Date","elapsed","seconds","Math","floor","interval","isBrowser","window","Container","styled","Comment","ReactionCount","Actions","Avatar","url","avatar","login","href","title","className","height","width","alt","src","REACTIONS","Reaction","reaction","count","reactionImage","confused","eyes","heart","hooray","laugh","rocket","reactionEmoji","target","rel","tone","alias","fallback-src","Comments","useState","comments","setComments","useEffect","commentsUrl","replace","a","fetch","headers","Accept","response","json","fetchComments","length","map","comment","key","id","user","html_url","avatar_url","data-date","created_at","updated_at","author_association","dangerouslySetInnerHTML","__html","body_html","reactions","viewBox","version","aria-hidden","fillRule","d","StyledUl","pageQuery","PostTemplate","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","keywords","frontmatter","tags","previous","next","excerpt","image","childImageSharp","resize","description","html","to","fields","slug"],"mappings":"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","file":"component---src-templates-post-tsx-7133ab7322325c379163.js","sourcesContent":["// Comes from https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\nconst timeAgoInWords = (date: string): string => {\n  const start = +new Date(date)\n  const elapsed = +new Date() - start\n  const seconds = Math.floor(elapsed / 1000)\n  let interval = Math.floor(seconds / 31536000)\n\n  if (interval > 1) {\n    return `${interval} years`\n  }\n  interval = Math.floor(seconds / 2592000)\n  if (interval > 1) {\n    return `${interval} months`\n  }\n  interval = Math.floor(seconds / 86400)\n  if (interval > 1) {\n    return `${interval} days`\n  }\n  interval = Math.floor(seconds / 3600)\n  if (interval > 1) {\n    return `${interval} hours`\n  }\n  interval = Math.floor(seconds / 60)\n  if (interval > 1) {\n    return `${interval} minutes`\n  }\n  return `${Math.floor(seconds)} seconds`\n}\n\nexport default timeAgoInWords\n","import React, {useState, useEffect} from 'react'\nimport timeAgoInWords from '../util/time-ago-in-words'\nimport {styled} from '../styles/theme'\n\n// We can't generate comments when building the static parts of the website\nconst isBrowser = typeof window !== `undefined`\n\nconst Container = styled('div')`\n  width: 55%;\n`\n\nconst Comment = styled('div')`\n  margin-top: 16px;\n  padding-top: 16px;\n  letter-spacing: normal;\n\n  a {\n    border: none;\n    text-decoration: none;\n    background: none;\n  }\n\n  .avatar {\n    position: absolute;\n    margin-left: -60px;\n    border-radius: 40px;\n  }\n  .content {\n    border: 1px solid #efefef;\n    border-radius: 6px;\n    margin-left: 60px;\n\n    .header {\n      padding: 16px;\n      background-color: #efefef;\n      width: 100%;\n\n      .date {\n        display: inline-block;\n      }\n\n      .association {\n        border: 1px solid lightgray;\n        border-radius: 20px;\n        display: inline-block;\n        margin-right: 6px;\n        margin-top: -3px;\n        float: right;\n        padding: 4px 8px;\n        font-size: 0.8em;\n        text-transform: capitalize;\n      }\n    }\n\n    .reactions {\n      padding: 0;\n      display: block;\n      width: 100%;\n\n      g-emoji {\n        border-right: 1px solid lightgray;\n        display: inline-block;\n        padding: 12px;\n        margin: 0;\n      }\n\n      .react div {\n        border-right: 1px solid lightgray;\n        display: inline-block;\n        padding: 16px;\n        margin: 0;\n      }\n      .react div svg {\n        padding-top: 2px;\n      }\n    }\n  }\n`\n\nconst ReactionCount = styled('span')`\n  color: gray;\n  padding-left: 8px;\n`\n\nconst Actions = styled('div')`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  float: right;\n`\n\ninterface AvatarProps {\n  readonly url: string\n  readonly avatar: string\n  readonly login: string\n}\n\nconst Avatar: React.FC<AvatarProps> = ({url, avatar, login}) => (\n  <a href={url} title={`@${login}`}>\n    <img className=\"avatar avatar-user\" height=\"40\" width=\"40\" alt={`@${login}`} src={avatar} />\n  </a>\n)\n\ntype ReactionKey = '+1' | '-1' | 'confused' | 'eyes' | 'heart' | 'hooray' | 'laugh' | 'rocket'\ntype ReactionImages = {[key in ReactionKey]: string}\ntype ReactionEmoji = {[key in ReactionKey]: string}\n\nconst REACTIONS = ['+1', '-1', 'confused', 'eyes', 'heart', 'hooray', 'laugh', 'rocket']\n\ninterface ReactionProps {\n  readonly reaction: ReactionKey\n  readonly count: number\n  readonly url: string\n}\n\nconst Reaction: React.FC<ReactionProps> = ({url, reaction, count}) => {\n  const images: ReactionImages = {\n    '+1': '1f44d.png',\n    '-1': '1f44e.png',\n    confused: '1f615.png',\n    eyes: '1f440.png',\n    heart: '1f5bc.png',\n    hooray: '1f389.png',\n    laugh: '1f604.png',\n    rocket: '1f680.png',\n  }\n  const emoji: ReactionEmoji = {\n    '+1': 'üëç',\n    '-1': 'üëé',\n    confused: 'üòï',\n    eyes: 'üëÄ',\n    heart: '‚ù§Ô∏è',\n    hooray: 'üéâ',\n    laugh: 'ü§£',\n    rocket: 'üöÄ',\n  }\n  const reactionImage = images[reaction]\n  const reactionEmoji = emoji[reaction]\n\n  if (count === 0) {\n    return <></>\n  }\n\n  return (\n    <a href={url} title={reaction} target=\"_blank\" rel=\"noreferrer noopener\">\n      <g-emoji\n        tone=\"0\"\n        alias={reaction}\n        fallback-src={`https://github.githubassets.com/images/icons/emoji/unicode/${reactionImage}`}\n        className=\"emoji\">\n        {reactionEmoji} <ReactionCount>{count}</ReactionCount>\n      </g-emoji>\n    </a>\n  )\n}\n\ninterface CommentProps {\n  readonly url: string\n}\n\nexport const Comments: React.FC<CommentProps> = ({url}) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [comments, setComments] = useState(null as any)\n\n  useEffect(() => {\n    if (!isBrowser) return\n    const apiUrl = url.replace('github.com/', 'api.github.com/repos/')\n    const commentsUrl = `${apiUrl}/comments`\n    const fetchComments = async (): Promise<void> => {\n      const response = await fetch(commentsUrl, {\n        headers: {\n          Accept: 'application/vnd.github.v3.html+json application/vnd.github.squirrel-girl-preview',\n        },\n      })\n\n      const json = await response.json()\n      setComments(json)\n    }\n    fetchComments()\n  }, [url])\n\n  return (\n    <>\n      <hr />\n      <h2>Comments</h2>\n      <Container className=\"github\">\n        <div>\n          <p>\n            Thanks for reading ‚ù§Ô∏è ‚Äì comment by replying to the <a href={url}>issue for this post</a>.{` `}\n            {(!comments || comments.length === 0) && 'There‚Äôs no comments yet; you could be the first.'}\n            <br />\n          </p>\n        </div>\n        {comments &&\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          comments.map((comment: any) => {\n            return (\n              <Comment key={comment.id} className=\"comment sans\">\n                <div className=\"content\">\n                  <Avatar url={comment.user.html_url} avatar={comment.user.avatar_url} login={comment.user.login} />\n                  <div className=\"header\">\n                    <div className=\"date\" data-date={comment.created_at}>\n                      <a href={comment.user.html_url}>\n                        <strong>@{comment.user.login}</strong>\n                      </a>\n                      {` `}\n                      commented <a href={comment.html_url}>{timeAgoInWords(comment.created_at)} ago</a>\n                      {` `}\n                      {comment.updated_at > comment.created_at && <span>‚Ä¢ edited</span>}\n                    </div>\n                    {comment.author_association === 'OWNER' && <div className=\"association\">Author</div>}\n                    {comment.author_association === 'OWNER' && <div className=\"association\">Owner</div>}\n                  </div>\n                  <div className=\"markdown-body sans\" dangerouslySetInnerHTML={{__html: comment.body_html}} />\n                  <div className=\"reactions\">\n                    {REACTIONS.map(reaction => (\n                      <Reaction\n                        key={reaction}\n                        url={comment.html_url}\n                        reaction={reaction as ReactionKey}\n                        count={+comment.reactions[reaction]}\n                      />\n                    ))}\n                    <a\n                      href={comment.html_url}\n                      title=\"Add a reaction\"\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                      className=\"react\">\n                      <div>\n                        <svg\n                          className=\"octicon octicon-smiley\"\n                          viewBox=\"0 0 16 16\"\n                          version=\"1.1\"\n                          width=\"16\"\n                          height=\"16\"\n                          aria-hidden=\"true\">\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM5 8a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zM5.32 9.636a.75.75 0 011.038.175l.007.009c.103.118.22.222.35.31.264.178.683.37 1.285.37.602 0 1.02-.192 1.285-.371.13-.088.247-.192.35-.31l.007-.008a.75.75 0 111.222.87l-.614-.431c.614.43.614.431.613.431v.001l-.001.002-.002.003-.005.007-.014.019a1.984 1.984 0 01-.184.213c-.16.166-.338.316-.53.445-.63.418-1.37.638-2.127.629-.946 0-1.652-.308-2.126-.63a3.32 3.32 0 01-.715-.657l-.014-.02-.005-.006-.002-.003v-.002h-.001l.613-.432-.614.43a.75.75 0 01.183-1.044h.001z\"\n                          />\n                        </svg>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </Comment>\n            )\n          })}\n        <Actions>\n          <a href={`${url}#new_comment_field`} target=\"_blank\" rel=\"noreferrer noopener\" className=\"button btn\">\n            Add a comment &rarr;\n          </a>\n        </Actions>\n      </Container>\n    </>\n  )\n}\n","import React from 'react'\nimport {Link, graphql} from 'gatsby'\nimport {styled} from '../styles/theme'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport {Comments} from '../components/comments'\n\ninterface Props {\n  readonly data: PageQueryData\n  readonly pageContext: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    previous?: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    next?: any\n  }\n}\n\nconst StyledUl = styled('ul')`\n  list-style-type: none;\n\n  li::before {\n    content: '' !important;\n    padding-right: 0 !important;\n  }\n`\n\nconst PostTemplate: React.FC<Props> = ({data, pageContext}) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const keywords = post.frontmatter.tags\n  const {previous, next} = pageContext\n  const excerpt = post.frontmatter.excerpt || post.excerpt\n  const image = post.frontmatter.image && post.frontmatter.image.childImageSharp.resize.src\n  return (\n    <Layout title={siteTitle}>\n      <Head title={post.frontmatter.title} description={excerpt} image={image} keywords={keywords} />\n      <article>\n        <header>\n          <h1>{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <div className={`page-content`}>\n          <div dangerouslySetInnerHTML={{__html: post.html}} />\n          <Comments url={post.frontmatter.comments} />\n          <hr />\n          <h2>There‚Äôs more to read</h2>\n          <div>\n            <p>\n              <em>Looking for more long-form posts? Here ya go...</em>\n            </p>\n          </div>\n          <StyledUl>\n            {previous && (\n              <li>\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ‚Üê {previous.frontmatter.title}\n                </Link>\n              </li>\n            )}\n            {next && (\n              <li>\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} ‚Üí\n                </Link>\n              </li>\n            )}\n          </StyledUl>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  markdownRemark: {\n    id?: string\n    excerpt?: string\n    html: string\n    frontmatter: {\n      title: string\n      date: string\n      tags: [string]\n      excerpt?: string\n      comments: string\n      image: {\n        childImageSharp: {\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt(pruneLength: 2500)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        excerpt\n        comments\n        image {\n          childImageSharp {\n            resize(width: 1500, height: 1500) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default PostTemplate\n"],"sourceRoot":""}