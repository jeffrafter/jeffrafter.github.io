{"version":3,"sources":["webpack:///./src/components/bio.tsx","webpack:///./src/pages/tags.tsx"],"names":["Bio","query","render","data","site","siteMetadata","description","social","href","twitter","rel","instagram","github","Container","styled","pageQuery","Tags","siteTitle","title","siteKeywords","keywords","group","allMarkdownRemark","className","map","tag","key","fieldValue","to","totalCount"],"mappings":"4IA0DeA,IA1CO,kBACpB,kBAAC,cAAD,CACEC,MAAK,aAcLC,OAAQ,SAACC,GAAqD,MAC9BA,EAAKC,KAAKC,aAAjCC,EADqD,EACrDA,YAAaC,EADwC,EACxCA,OACpB,OACE,6BACE,4BAAKD,GACL,4CAEE,6BACA,uBAAGE,KAAMD,EAAOE,QAASC,IAAI,uBAA7B,WAGC,MACD,uBAAGF,KAAMD,EAAOI,UAAWD,IAAI,uBAA/B,aAGC,MACD,uBAAGF,KAAMD,EAAOK,OAAQF,IAAI,uBAA5B,aA/BV,W,wgBCTF,IAAMG,EAAYC,YAAO,MAAPA,CAAH,KAwDFC,EAAY,aAiBVC,UAnEe,SAAC,GAAW,IAAVb,EAAU,EAAVA,KACxBc,EAAYd,EAAKC,KAAKC,aAAaa,MACnCC,EAAehB,EAAKC,KAAKC,aAAae,SACtCC,EAAQlB,EAAKmB,mBAAqBnB,EAAKmB,kBAAkBD,MAE/D,OACE,kBAAC,IAAD,CAAQH,MAAOD,GACb,kBAAC,IAAD,CAAMC,MAAOD,EAAWG,SAAUD,IAClC,kBAAC,IAAD,MACA,kBAACN,EAAD,KACE,iCACE,yBAAKU,UAAS,gBACXF,GACCA,EAAMG,KACJ,SAAAC,GAAG,OACDA,GACE,yBAAKC,IAAKD,EAAIE,YACZ,4BACE,kBAAC,OAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAf,KAA+BF,EAAIE,aAE7C,+BACGF,EAAII,WADP,QAEsB,IAAnBJ,EAAII,WAAmB,GAAK,UAM3C","file":"component---src-pages-tags-tsx-7578574f5e2dead3e222.js","sourcesContent":["import React from 'react'\nimport {StaticQuery, graphql} from 'gatsby'\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      description: string\n      social: {\n        twitter: string\n        instagram: string\n        github: string\n      }\n    }\n  }\n}\n\nconst Bio: React.FC = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            social {\n              twitter\n              instagram\n              github\n            }\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryData): React.ReactElement | null => {\n      const {description, social} = data.site.siteMetadata\n      return (\n        <div>\n          <h1>{description}</h1>\n          <p>\n            By Jeff Rafter\n            <br />\n            <a href={social.twitter} rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n            {' / '}\n            <a href={social.instagram} rel=\"noopener noreferrer\">\n              Instagram\n            </a>\n            {' / '}\n            <a href={social.github} rel=\"noopener noreferrer\">\n              GitHub\n            </a>\n          </p>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Bio\n","import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport Bio from '../components/bio'\nimport {styled} from '../styles/theme'\n\nconst Container = styled('div')``\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nconst Tags: React.FC<Props> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title\n  const siteKeywords = data.site.siteMetadata.keywords\n  const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title={siteTitle} keywords={siteKeywords} />\n      <Bio />\n      <Container>\n        <article>\n          <div className={`page-content`}>\n            {group &&\n              group.map(\n                tag =>\n                  tag && (\n                    <div key={tag.fieldValue}>\n                      <h3>\n                        <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\n                      </h3>\n                      <small>\n                        {tag.totalCount} post\n                        {tag.totalCount === 1 ? '' : 's'}\n                      </small>\n                    </div>\n                  ),\n              )}\n          </div>\n          <br />\n        </article>\n      </Container>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n      keywords: [string]\n    }\n  }\n  allMarkdownRemark: {\n    group: {\n      fieldValue: string\n      totalCount: number\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        keywords\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags\n"],"sourceRoot":""}