{"version":3,"sources":["webpack:///./src/templates/tag.tsx"],"names":["TagTemplate","render","this","props","pageContext","data","tag","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","className","map","node","frontmatter","fields","slug","excerpt","key","to","date","dangerouslySetInnerHTML","__html","React","Component","pageQuery"],"mappings":"qOAaqBA,E,gLACnBC,OAAA,WAAS,MACqBC,KAAKC,MAA1BC,EADA,EACAA,YAAaC,EADb,EACaA,KACbC,EAAOF,EAAPE,IACDC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQH,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAK,iBAAmBJ,EAAnB,IACLQ,SAAU,CAAC,OAAD,8BAA0CR,KAEtD,iCACE,gCACE,4CAAkBA,IAEpB,yBAAKS,UAAS,gBACXJ,EAAMK,KAAI,YAAY,IAAVC,EAAU,EAAVA,KACLP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAC9CC,EAAUJ,EAAKC,YAAYG,SAAWJ,EAAKI,QACjD,OACE,yBAAKC,IAAKL,EAAKE,OAAOC,MACpB,4BACE,kBAAC,IAAD,CAAMG,GAAIN,EAAKE,OAAOC,MAAOV,IAE/B,+BAAQO,EAAKC,YAAYM,MACzB,uBAAGC,wBAAyB,CAACC,OAAQL,a,GA3BdM,IAAMC,WA8DlCC,EAAY","file":"component---src-templates-tag-tsx-27df79a084644066061c.js","sourcesContent":["import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n  readonly pageContext: {\n    tag: string\n  }\n}\n\nexport default class TagTemplate extends React.Component<Props> {\n  render() {\n    const {pageContext, data} = this.props\n    const {tag} = pageContext\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout title={siteTitle}>\n        <Head\n          title={`Posts tagged \"${tag}\"`}\n          keywords={[`blog`, `gatsby`, `javascript`, `react`, tag]}\n        />\n        <article>\n          <header>\n            <h1>Posts tagged {tag}</h1>\n          </header>\n          <div className={`page-content`}>\n            {posts.map(({node}) => {\n              const title = node.frontmatter.title || node.fields.slug\n              const excerpt = node.frontmatter.excerpt || node.excerpt\n              return (\n                <div key={node.fields.slug}>\n                  <h3>\n                    <Link to={node.fields.slug}>{title}</Link>\n                  </h3>\n                  <small>{node.frontmatter.date}</small>\n                  <p dangerouslySetInnerHTML={{__html: excerpt}} />\n                </div>\n              )\n            })}\n          </div>\n        </article>\n      </Layout>\n    )\n  }\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    totalCount: number\n    edges: {\n      node: {\n        excerpt: string\n        fields: {\n          slug: string\n        }\n        frontmatter: {\n          date: string\n          title: string\n          excerpt: string\n        }\n      }\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 1000, filter: {frontmatter: {tags: {in: [$tag]}}}) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}