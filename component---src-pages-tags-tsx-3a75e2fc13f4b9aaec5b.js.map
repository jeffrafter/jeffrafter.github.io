{"version":3,"sources":["webpack:///./src/pages/tags.tsx"],"names":["Tags","render","data","this","props","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","keywords","className","map","tag","key","fieldValue","to","totalCount","React","Component","pageQuery"],"mappings":"qOAUqBA,E,gLACnBC,OAAA,WAAS,IACAC,EAAQC,KAAKC,MAAbF,KACDG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,mBAAqBR,EAAKQ,kBAAkBD,MAE/D,OACE,kBAAC,IAAD,CAAQD,MAAOH,GACb,kBAAC,IAAD,CAAMG,MAAM,WAAWG,SAAU,CAAC,OAAD,iCACjC,iCACE,wCACA,yBAAKC,UAAS,gBACXH,GACCA,EAAMI,KACJ,SAAAC,GAAG,OACDA,GACE,yBAAKC,IAAKD,EAAIE,YACZ,4BACE,kBAAC,IAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAf,KAA+BF,EAAIE,aAE7C,+BACGF,EAAII,WADP,QAEsB,IAAnBJ,EAAII,WAAmB,GAAK,a,GAtBnBC,IAAMC,WAgD3BC,EAAY","file":"component---src-pages-tags-tsx-3a75e2fc13f4b9aaec5b.js","sourcesContent":["import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nexport default class Tags extends React.Component<Props> {\n  render() {\n    const {data} = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n\n    return (\n      <Layout title={siteTitle}>\n        <Head title=\"All tags\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n        <article>\n          <h1>All tags</h1>\n          <div className={`page-content`}>\n            {group &&\n              group.map(\n                tag =>\n                  tag && (\n                    <div key={tag.fieldValue}>\n                      <h3>\n                        <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\n                      </h3>\n                      <small>\n                        {tag.totalCount} post\n                        {tag.totalCount === 1 ? '' : 's'}\n                      </small>\n                    </div>\n                  ),\n              )}\n          </div>\n        </article>\n      </Layout>\n    )\n  }\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    group: {\n      fieldValue: string\n      totalCount: number\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}