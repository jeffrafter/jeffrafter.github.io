{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["StyledUl","styled","PostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","excerpt","frontmatter","image","childImageSharp","resize","src","description","date","className","dangerouslySetInnerHTML","__html","html","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"0fAeA,IAAMA,EAAWC,YAAO,KAAPA,CAAH,KASOC,E,0LACnBC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGkBP,KAAKC,MAAMO,YAA7BC,EAHA,EAGAA,SAAUC,EAHV,EAGUA,KACXC,EAAUZ,EAAKa,YAAYD,SAAWZ,EAAKY,QAC3CE,EAAQd,EAAKa,YAAYC,OAASd,EAAKa,YAAYC,MAAMC,gBAAgBC,OAAOC,IAEtF,OACE,kBAAC,IAAD,CAAQT,MAAOH,GACb,kBAAC,IAAD,CAAMG,MAAOR,EAAKa,YAAYL,MAAOU,YAAaN,EAASE,MAAOA,IAClE,iCACE,gCACE,4BAAKd,EAAKa,YAAYL,OACtB,2BAAIR,EAAKa,YAAYM,OAEvB,yBAAKC,UAAS,gBACZ,yBAAKC,wBAAyB,CAACC,OAAQtB,EAAKuB,QAC5C,kBAAC3B,EAAD,KACGc,GACC,4BACE,kBAAC,OAAD,CAAMc,GAAId,EAASe,OAAOC,KAAMC,IAAI,QAApC,KACKjB,EAASG,YAAYL,QAI7BG,GACC,4BACE,kBAAC,OAAD,CAAMa,GAAIb,EAAKc,OAAOC,KAAMC,IAAI,QAC7BhB,EAAKE,YAAYL,MADpB,Y,GA5BwBoB,IAAMC,WAkEnCC,EAAY","file":"component---src-templates-post-tsx-cf4f8b9f1f7b0954198d.js","sourcesContent":["import React from 'react'\nimport {Link, graphql} from 'gatsby'\nimport {styled} from '../styles/theme'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n  readonly pageContext: {\n    previous?: any\n    next?: any\n  }\n}\n\nconst StyledUl = styled('ul')`\n  list-style-type: none;\n\n  li::before {\n    content: '' !important;\n    padding-right: 0 !important;\n  }\n`\n\nexport default class PostTemplate extends React.Component<Props> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const {previous, next} = this.props.pageContext\n    const excerpt = post.frontmatter.excerpt || post.excerpt\n    const image = post.frontmatter.image && post.frontmatter.image.childImageSharp.resize.src\n\n    return (\n      <Layout title={siteTitle}>\n        <Head title={post.frontmatter.title} description={excerpt} image={image} />\n        <article>\n          <header>\n            <h1>{post.frontmatter.title}</h1>\n            <p>{post.frontmatter.date}</p>\n          </header>\n          <div className={`page-content`}>\n            <div dangerouslySetInnerHTML={{__html: post.html}} />\n            <StyledUl>\n              {previous && (\n                <li>\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                </li>\n              )}\n              {next && (\n                <li>\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                </li>\n              )}\n            </StyledUl>\n          </div>\n        </article>\n      </Layout>\n    )\n  }\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  markdownRemark: {\n    id?: string\n    excerpt?: string\n    html: string\n    frontmatter: {\n      title: string\n      date: string\n      excerpt: string\n      image: {\n        childImageSharp: {\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt(pruneLength: 2500)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        image {\n          childImageSharp {\n            resize(width: 1500, height: 1500) {\n              src\n            }\n          }\n        }\n        excerpt\n      }\n    }\n  }\n`\n"],"sourceRoot":""}